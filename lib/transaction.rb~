class Transaction

attr_accessor :operations, :name, :id, :status, :intent_locks, :next_operation, :actual_tick, :locks_applied
	
	def initialize ticks, actual_tick
		@ticks = ticks
		@actual_tick = actual_tick
		@intent_locks = []

		@locks_applied = false

		@status = :elegible		# FAULTY RUNNING ELEGIBLE AND COMPLETE
		@operations = []
		@next_operation = 0
	end

=begin
	# check if the transactions lock are allowed and set to running if so
	def request_lock record_locks, lock_matrix

		@intent_locks.each do |element|
			if record_locks[element.baseset].empty?
				record_locks[element.baseset] << element.lock_type
			else
				record_locks[element.baseset].each do |e|
					if lock_matrix[element.baseset][e] # checks if lock can be applied

					end
				end
			end

		end
		@status = :running
	end
=end

	def transaction_complete?
		if @next_operation + 1 <= @operations.size
			false
		else
			@status = :complete
			puts "Transaction is complete"
			true
		end
			
	end
end
